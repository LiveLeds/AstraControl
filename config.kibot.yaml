# ATTENTION! THIS ISN'T A FULLY FUNCTIONAL EXAMPLE.
# You should take portions of this example and edit the options to make
# them suitable for your use.
# This file is useful to know all the available options.
kibot:
  version: 1

globals:
  resources_dir: resources

filters:
  - name: only_jlc_parts
    comment: "Only parts with JLC (LCSC Part) code"
    type: generic
    include_only:
      - column: "LCSC Part"
        regex: '^C\d+'

variants:
  - name: rotated
    comment: 'Rotate for JLCPCB'
    type: kibom
    variant: rotated
    pre_transform: _rot_footprint_jlcpcb

outputs:
  - name: 'render_3d_example'
    comment: "Exports the image generated by KiCad's 3D viewer. *Deprecated*"
    type: 'render_3d'
    dir: 'output'
    options:
      # [boolean=false] When enabled the image will be post-processed to remove the empty space around the image.
      # In this mode the `background2` is changed to be the same as `background1`
      auto_crop: false
      # [string='#66667F'] First color for the background gradient
      background1: '#66667F'
      # [string='#CCCCE5'] Second color for the background gradient
      background2: '#CCCCE5'
      # [string='#332B16'] Color for the board without copper or solder mask
      board: '#332B16'
      # [boolean=true] Clip silkscreen at via annuli (KiCad 6+)
      clip_silk_on_via_annulus: true
      # [string='#8b898c'] Color for the copper
      copper: '#8b898c'
      # [string|list(string)='_none'] Name of the filter to mark components as not fitted.
      # A short-cut to use for simple cases where a variant is an overkill
      dnf_filter: '_none'
      # [boolean=true] Downloads missing 3D models from KiCad git.
      # Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.
      # They are downloaded to a temporal directory and discarded.
      # If you want to cache the downloaded files specify a directory using the
      # KIBOT_3D_MODELS environment variable
      download: true
      # [boolean=true] In addition to try to download the 3D models from KiCad git also try to get
      # them from LCSC database. In order to work you'll need to provide the LCSC
      # part number. The field containing the LCSC part number is defined by the
      # `field_lcsc_part` global variable
      download_lcsc: true
      # [boolean=false] Tell KiCad to use the colors from the stackup. They are better than the unified KiBot colors.
      # Needs KiCad 6 or newer
      force_stackup_colors: false
      # [number=720] Image height (aprox.)
      height: 720
      # [list(string)=[]] List of components to highlight. Ranges like *R5-R10* are supported
      highlight: []
      # [boolean=false] Highlight over the component (not under)
      highlight_on_top: false
      # [number=1.5] [0,1000] How much the highlight extends around the component [mm]
      highlight_padding: 1.5
      # [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models
      kicad_3d_url: 'https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'
      # [string=''] Text added to the end of the download URL.
      # Can be used to pass variables to the GET request, i.e. ?VAR1=VAL1&VAR2=VAL2
      kicad_3d_url_suffix: ''
      # [number=0] Steps to move in the X axis, positive is to the right.
      # Just like pressing the right arrow in the 3D viewer
      move_x: 0
      # [number=0] Steps to move in the Y axis, positive is up.
      # Just like pressing the up arrow in the 3D viewer
      move_y: 0
      # [boolean=false] Used to exclude 3D models for surface mount components
      no_smd: false
      # [boolean=false] Used to exclude 3D models for through hole components
      no_tht: false
      # [boolean=false] Used to exclude 3D models for components with 'virtual' attribute
      no_virtual: false
      # [boolean=false] Enable the orthographic projection mode (top view looks flat)
      orthographic: false
      # [string='%f-%i%I%v.%x'] Name for the generated image file (%i='3D_$VIEW' %x='png'). Affected by global options
      output: '%f-%i%I%v.%x'
      # [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.
      # A short-cut to use for simple cases where a variant is an overkill
      pre_transform: '_none'
      # [boolean=false] Enable the ray tracing. Much better result, but slow, and you'll need to adjust `wait_rt`
      ray_tracing: false
      # [boolean=true] When disabled we use the colors of the layers used by the GUI. Needs KiCad 6 or 7.
      # Is emulated on KiCad 8
      realistic: true
      # [number=0] Steps to rotate around the X axis, positive is clockwise.
      # Each step is currently 10 degrees. Only for KiCad 6 or newer
      rotate_x: 0
      # [number=0] Steps to rotate around the Y axis, positive is clockwise.
      # Each step is currently 10 degrees. Only for KiCad 6 or newer
      rotate_y: 0
      # [number=0] Steps to rotate around the Z axis, positive is clockwise.
      # Each step is currently 10 degrees. Only for KiCad 6 or newer
      rotate_z: 0
      # [boolean=false] Show the content of F.Adhesive/B.Adhesive layers. KiCad 6 or newer
      show_adhesive: false
      # [boolean=true] Show the PCB core material. KiCad 6 or newer
      show_board_body: true
      # [boolean=false] Show the content of the User.Comments and User.Drawings layer for KiCad 5, 6 and 7.
      # On KiCad 8 this option controls only the User.Comments and you have a separated option for the
      # User.Drawings called `show_drawings`
      # Note that KiCad 5/6/7 doesn't show it when `realistic` is enabled, but KiCad 8 does it.
      # Also note that KiCad 5 ray tracer shows comments outside the PCB, but newer KiCad versions
      # doesn't
      show_comments: false
      # [list(string)|string=all] [none,all] List of components to draw, can be also a string for `none` or `all`.
      # Ranges like *R5-R10* are supported.
      # Unlike the `pcbdraw` output, the default is `all`
      show_components: all
      # [boolean=false] Show the content of the User.Drawings layer. Only available for KiCad 8 and newer.
      # Consult `show_comments` to learn when drawings are visible
      show_drawings: false
      # [boolean=false] Show the content of the Eco1.User/Eco2.User layers.
      # For KiCad 8 `show_eco1` and `show_eco2` are available.
      # Consult `show_comments` to learn when drawings are visible
      show_eco: false
      # [boolean=false] Show the content of the Eco1.User layer. KiCad 8 supports individual Eco layer options, for 6 and 7
      # use the `show_eco` option.
      # Consult `show_comments` to learn when drawings are visible
      show_eco1: false
      # [boolean=false] Show the content of the Eco1.User layer. KiCad 8 supports individual Eco layer options, for 6 and 7
      # use the `show_eco` option.
      # Consult `show_comments` to learn when drawings are visible
      show_eco2: false
      # [boolean=true] Show the silkscreen layers (KiCad 6+)
      show_silkscreen: true
      # [boolean=true] Show the solder mask layers (KiCad 6+)
      show_soldermask: true
      # [boolean=true] Show the solder paste layers (KiCad 6+)
      show_solderpaste: true
      # [boolean=true] Show filled areas in zones (KiCad 6+)
      show_zones: true
      # [string='#d5dce4'] Color for the silk screen
      silk: '#d5dce4'
      # [string='#208b47'] Color for the solder mask
      solder_mask: '#208b47'
      # [string='#808080'] Color for the solder paste
      solder_paste: '#808080'
      # [boolean=true] Clip silkscreen at solder mask edges (KiCad 6+)
      subtract_mask_from_silk: true
      # [boolean=false] When enabled the image will be post-processed to make the background transparent.
      # In this mode the `background1` and `background2` colors are ignored
      transparent_background: false
      # [string='#00ff00'] Color used for the chroma key. Adjust it if some regions of the board becomes transparent
      transparent_background_color: '#00ff00'
      # [number=15] [0,100] Chroma key tolerance (percent). Bigger values will remove more pixels
      transparent_background_fuzz: 15
      # [string=''] Board variant to apply
      variant: ''
      # [string='top'] [top,bottom,front,rear,right,left,z,Z,y,Y,x,X] Point of view
      view: 'top'
      # `wait_ray_tracing` is an alias for `wait_render`
      # [number=-600] How many seconds we must wait before capturing the render (ray tracing or normal).
      # Lamentably KiCad can save an unfinished image. Enlarge it if your image looks partially rendered.
      # Use negative values to enable the auto-detect using CPU load.
      # In this case the value is interpreted as a time-out.
      wait_render: -600
      # [number=1280] Image width (aprox.)
      width: 1280
      # [number=0] Zoom steps. Use positive to enlarge, get closer, and negative to reduce.
      # Same result as using the mouse wheel in the 3D viewer.
      # Note that KiCad 8 starts with a zoom to fit, so you might not even need it
      zoom: 0
  - name: 'blender_export_example'
    comment: 'Exports the PCB in various 3D file formats.'
    type: 'blender_export'
    dir: 'output/Blender'
    options:
      # [boolean=true] Add a default light when none specified.
      # The default light is located at (-size*3.33, size*3.33, size*5) where size is max(width, height) of the PCB
      add_default_light: true
      # [number=1.1] Value to multiply the Z axis coordinate after computing the automatically generated camera.
      # Used to avoid collision of the camera and the object
      auto_camera_z_axis_factor: 1.1
      # [dict] Options for the camera.
      # If none specified KiBot will create a suitable camera.
      # If no position is specified for the camera KiBot will look for a suitable position
      camera:
        # [number=-1] Minimum distance for objects to the camera. Any object closer than this distance won't be visible.
        # Only positive values have effect. A negative value has a special meaning.
        # For a camera with defined position, a negative value means to use Blender defaults (i.e. 0.1 m).
        # For cameras without position KiBot will ask Blender to compute its position and the use a clip
        # distance that is 1/10th of the Z distance
        clip_start: -1
        # [string=''] Name for the camera
        name: ''
        # [number|string] X position [m]. You can use `width`, `height` and `size` for PCB dimensions
        pos_x: 0
        # [number|string] Y position [m]. You can use `width`, `height` and `size` for PCB dimensions
        pos_y: 0
        # [number|string] Z position [m]. You can use `width`, `height` and `size` for PCB dimensions
        pos_z: 0
        # [string='perspective'] [perspective,orthographic,panoramic] Type of camera
        type: 'perspective'
      # [string=''] Default value for the `file_id` in the `point_of_view` options.
      # Use something like '_%03d' for animations
      default_file_id: ''
      # [boolean=false] When using the automatically generated camera and multiple points of view this option computes the camera
      # position just once. Suitable for videos
      fixed_auto_camera: false
      # [dict|list(dict)] Options for the light/s
      light:
        # [number=0] How powerful is the light. Using 0 for POINT and SUN KiBot will try to use something useful
        - energy: 0
          # [string=''] Name for the light
          name: ''
          # [number|string] X position [m]. You can use `width`, `height` and `size` for PCB dimensions
          pos_x: 0
          # [number|string] Y position [m]. You can use `width`, `height` and `size` for PCB dimensions
          pos_y: 0
          # [number|string] Z position [m]. You can use `width`, `height` and `size` for PCB dimensions
          pos_z: 0
          # [string='POINT'] [POINT,SUN,SPOT,HEMI,AREA] Type of light. SUN lights will illuminate more evenly
          type: 'POINT'
      # [dict|list(dict)] Outputs to generate in the same run
      outputs:
        # [string=''] Subdirectory for this output
        - dir: ''
          # [string='%f-%i%I%v.%x'] Name for the generated file (%i='3D_blender_$VIEW' %x=VARIABLE).
          # The extension is selected from the type. Affected by global options
          output: '%f-%i%I%v.%x'
          # [string='render'] [fbx,obj,x3d,gltf,stl,ply,blender,render] The format for the output.
          # The `render` type will generate a PNG image of the render result.
          # `fbx` is Kaydara's Filmbox, 'obj' is the Wavefront, 'x3d' is the new ISO/IEC standard
          # that replaced VRML, `gltf` is the standardized GL format, `stl` is the 3D printing
          # format, 'ply' is Polygon File Format (Stanford).
          # Note that some formats includes the light and camera and others are just the 3D model
          # (i.e. STL and PLY)
          type: 'render'
      # [string|dict] Options to export the PCB to Blender.
      # You can also specify the name of the output that generates the PCB3D file.
      # See the `PCB2Blender_2_1`, `PCB2Blender_2_7` and `PCB2Blender_2_1_haschtl` templates
      pcb3d:
        # [string|list(string)='_none'] Name of the filter to mark components as not fitted.
        # A short-cut to use for simple cases where a variant is an overkill
        dnf_filter: '_none'
        # [boolean=true] Downloads missing 3D models from KiCad git.
        # Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.
        # They are downloaded to a temporal directory and discarded.
        # If you want to cache the downloaded files specify a directory using the
        # KIBOT_3D_MODELS environment variable
        download: true
        # [boolean=true] In addition to try to download the 3D models from KiCad git also try to get
        # them from LCSC database. In order to work you'll need to provide the LCSC
        # part number. The field containing the LCSC part number is defined by the
        # `field_lcsc_part` global variable
        download_lcsc: true
        # [list(string)=[]] List of components to highlight. Ranges like *R5-R10* are supported
        highlight: []
        # [boolean=false] Highlight over the component (not under)
        highlight_on_top: false
        # [number=1.5] [0,1000] How much the highlight extends around the component [mm]
        highlight_padding: 1.5
        # [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models
        kicad_3d_url: 'https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'
        # [string=''] Text added to the end of the download URL.
        # Can be used to pass variables to the GET request, i.e. ?VAR1=VAL1&VAR2=VAL2
        kicad_3d_url_suffix: ''
        # [boolean=false] Used to exclude 3D models for components with 'virtual' attribute
        no_virtual: false
        # [string='%f-%i%I%v.%x'] Name for the generated PCB3D file (%i='blender_export' %x='pcb3d'). Affected by global options
        output: '%f-%i%I%v.%x'
        # [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.
        # A short-cut to use for simple cases where a variant is an overkill
        pre_transform: '_none'
        # [list(string)|string=all] [none,all] List of components to draw, can be also a string for `none` or `all`.
        # Ranges like *R5-R10* are supported.
        # Unlike the `pcbdraw` output, the default is `all`
        show_components: all
        # [boolean=true] Add solder paste only for the populated components.
        # Populated components are the ones listed in `show_components`
        solder_paste_for_populated: true
        # [string=''] Board variant to apply
        variant: ''
        # [string='2.7'] [2.1,2.1_haschtl,2.7] Variant of the format used
        version: '2.7'
      # Options to configure how Blender imports the PCB.
      # The default values are good for most cases
      pcb_import:
        # [boolean=true] Center the PCB at the coordinates origin
        center: true
        # [boolean=true] Import the components
        components: true
        # [boolean=true] Separate the sub-PCBs in separated 3D models
        cut_boards: true
        # [boolean=true] Create good looking materials
        enhance_materials: true
        # [boolean=true] Reuse materials
        merge_materials: true
        # [string='SMART'] [NONE,SMART,ALL] The plug-in can add nice looking solder joints.
        # This option controls if we add it for none, all or only for THT/SMD pads with solder paste
        solder_joints: 'SMART'
        # [boolean=true] Move the sub-PCBs to their relative position
        stack_boards: true
        # [number=1016.0] [508-2032] Texture density in dots per inch
        texture_dpi: 1016.0
      # [dict|list(dict)] How the object is viewed by the camera
      point_of_view:
        # [string=''] String to differentiate the name of this point of view.
        # When empty we use the `default_file_id` or the `view`
        - file_id: ''
          # [number=0] Angle to rotate the board in the X axis, positive is clockwise [degrees]
          rotate_x: 0
          # [number=0] Angle to rotate the board in the Y axis, positive is clockwise [degrees]
          rotate_y: 0
          # [number=0] Angle to rotate the board in the Z axis, positive is clockwise [degrees]
          rotate_z: 0
          # [number=1] [1-1000] Generate this amount of steps using the rotation angles as increments.
          # Use a value of 1 (default) to interpret the angles as absolute.
          # Used for animations. You should define the `default_file_id` to something like
          # '_%03d' to get the animation frames
          steps: 1
          # [string='top'] [top,bottom,front,rear,right,left,z,Z,y,Y,x,X] Point of view.
          # Compatible with `render_3d`
          view: 'top'
      # [dict] Controls how the render is done for the `render` output type
      render_options:
        # [boolean=false] When enabled the image will be post-processed to remove the empty space around the image.
        # In this mode the `background2` is changed to be the same as `background1`
        auto_crop: false
        # [string='#66667F'] First color for the background gradient
        background1: '#66667F'
        # [string='#CCCCE5'] Second color for the background gradient
        background2: '#CCCCE5'
        # `height` is an alias for `resolution_y`
        # [boolean=false] Used to disable the render denoiser on old hardware, or when the functionality isn't compiled.
        # Note that the impact in quality is huge, you should increase the amount of samples 10 times
        no_denoiser: false
        # [number=1280] Width of the image
        resolution_x: 1280
        # [number=720] Height of the image
        resolution_y: 720
        # [number=10] How many samples we create. Each sample is a raytracing render.
        # Use 1 for a raw preview, 10 for a draft and 100 or more for the final render
        samples: 10
        # [boolean=false] Make the background transparent
        transparent_background: false
        # `width` is an alias for `resolution_x`
  - name: "pdf_sch_print"
    comment: "Exports the schematic to the most common exchange format. Suitable for printing."
    type: "pdf_sch_print"
    dir: "output"
    options:
      # [boolean=true] Generate with all hierarchical sheets
      all_pages: true
      # [boolean=false] Use the background color from the `color_theme` (KiCad 6)
      background_color: true
      # [string=''] Color theme used, this must exist in the KiCad config (KiCad 6)
      color_theme: "Arcana"
      # [string|list(string)='_none'] Name of the filter to mark components as not fitted.
      # A short-cut to use for simple cases where a variant is an overkill
      dnf_filter: "_none"
      # [boolean=true] Include the frame and title block
      frame: true
      # [boolean=false] Generate a monochromatic output
      monochrome: false
      # [string='%f-%i%I%v.%x'] Filename for the output PDF (%i=schematic, %x=pdf). Affected by global options
      output: "%f-%i%I%v.%x"
      # [string=''] Worksheet file (.kicad_wks) to use. Leave empty to use the one specified in the project.
      # This option works only when you print the toplevel sheet of a project and the project
      # file is available
      sheet_reference_layout: ""
      # [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.
      # If it starts with `+` the text is concatenated
      title: ""
      # [string=''] Board variant to apply.
      # Not fitted components are crossed
      variant: ""
      # Info:
  - name: JLCPCB_gerbers
    comment: Gerbers compatible with JLCPCB
    type: gerber
    dir: output/JLCPCB/Gerber
    options: &gerber_options
      exclude_edge_layer: true
      exclude_pads_from_silkscreen: true
      plot_sheet_reference: false
      plot_footprint_refs: true
      plot_footprint_values: false
      force_plot_invisible_refs_vals: false
      tent_vias: true
      use_protel_extensions: true
      create_gerber_job_file: false
      disable_aperture_macros: true
      gerber_precision: 4.6
      use_gerber_x2_attributes: false
      use_gerber_net_attributes: false
      line_width: 0.1
      subtract_mask_from_silk: true
    layers:
      # Note: a more generic approach is to use 'copper' but then the filenames
      # are slightly different.
      - F.Cu
      - In1.Cu
      - In2.Cu
      - B.Cu
      - F.Paste
      - B.Paste
      - F.SilkS
      - B.SilkS
      - F.Mask
      - B.Mask
      - Edge.Cuts

  - name: JLCPCB_drill
    comment: Drill files compatible with JLCPCB
    type: excellon
    dir: output/JLCPCB/Drill
    options:
      pth_and_npth_single_file: false
      pth_id: '-PTH'
      npth_id: '-NPTH'
      metric_units: true
      map: gerber
      route_mode_for_oval_holes: false
      output: "%f%i.%x"

  - name: JLCPCB
    comment: ZIP file for JLCPCB
    type: compress
    dir: output/JLCPCB
    options:
      files:
        - from_output: JLCPCB_gerbers
          dest: /
        - from_output: JLCPCB_drill
          dest: /

  - name: ibom
    comment: Interactive BOM
    type: ibom 
    dir: output/IBOM
    options:
      dark_mode: true
      name_format: 'index'

  - name: 'JLCPCB_position'
    comment: "Pick and place file, JLCPCB style"
    type: position
    dir: output/JLCPCB/PickAndPlace
    options:
      variant: rotated
      output: '%f_cpl_jlc.%x'
      format: CSV
      units: millimeters
      separate_files_for_front_and_back: false
      only_smd: false
      columns:
        - id: Ref
          name: Designator
        - Val
        - Package
        - id: PosX
          name: "Mid X"
        - id: PosY
          name: "Mid Y"
        - id: Rot
          name: Rotation
        - id: Side
          name: Layer

  - name: 'JLCPCB_bom'
    comment: "BoM for JLCPCB"
    type: bom
    dir: output/JLCPCB/BOM    
    options:
      output: '%f_%i_jlc.%x'
      exclude_filter: 'only_jlc_parts'
      ref_separator: ','
      columns:
        - field: Value
          name: Comment
        - field: References
          name: Designator
        - Footprint
        - field: 'LCSC Part'
          name: 'LCSC Part #'
        - field: 'Quantity Per PCB'
          name: 'QTY'
      csv:
        hide_pcb_info: true
        hide_stats_info: true
        quote_all: true
  # It can be used to know more about the environment used to generate the files.
  # Please don't rely on the way things are reported, its content could change,
  # adding or removing information
  - name: "Info"
    comment: "Records information about the current run."
    type: "info"
    dir: "output"
    options:
      # [string='names'] [names,none,full] List environment variables.
      # IMPORTANT: Don't use `full` unless you know you are not leaking sensitive information
      environment: "names"
      # [string='%f-%i%I%v.%x'] Filename for the output (%i=info, %x=txt). Affected by global options
      output: "%f-%i%I%v.%x"
