name: CI

on:
  push:
    branches:
      - main
      - test-workflow

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Preflight:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Run Kibot
        uses: INTI-CMNB/KiBot@v2_dk8
        with:
          config: preflight.kibot.yaml
          dir: output
          schema: "AstraControlPCB/AstraControl.kicad_sch"
          board: "AstraControlPCB/AstraControl.kicad_pcb"
          verbose: 3
      - name: "Setup jq"
        uses: dcarbone/install-jq-action@v2
      - name: Parse ERC
        run: |
          erc_warnings=$(cat output/AstraControl-erc.json | jq '[try .violations[] | select(.severity == "warning")] | length')
          erc_errors=$(cat output/AstraControl-erc.json | jq '[try .violations[] | select(.severity == "error")] | length')
          cat <<EOF > output/erc_validation.md
          ### ERC Report
          - **Errors**: $erc_errors
          - **Warnings**: $erc_warnings
          - **Link**: [HTML Report](output/AstraControl-erc.html)
          EOF
          cat output/erc_validation.md
      - name: Parse DRC
        run: |
          drc_warnings=$(cat output/AstraControl-drc.json | jq '[try .violations[] | select(.severity == "warning")] | length')
          drc_errors=$(cat output/AstraControl-drc.json | jq '[try .violations[] | select(.severity == "error")] | length')
          cat <<EOF > output/drc_validation.md
          ### DRC Report
          - **Errors**: $drc_errors
          - **Warnings**: $drc_warnings
          - **Link**: [HTML Report](output/AstraControl-drc.html)
          EOF
          cat output/drc_validation.md

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AstraControl
          path: output
  Render_3D_Top_Angled:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Run Kibot
        uses: INTI-CMNB/KiBot@v2_dk8
        with:
          config: 3d_render_top_angled.kibot.yaml
          dir: output
          schema: "AstraControlPCB/AstraControl.kicad_sch"
          board: "AstraControlPCB/AstraControl.kicad_pcb"
          verbose: 3
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Render_Top_Angled
          path: output
  Report:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Run Kibot
        uses: INTI-CMNB/KiBot@v2_dk8
        with:
          config: config.kibot.yaml
          dir: output
          schema: "AstraControlPCB/AstraControl.kicad_sch"
          board: "AstraControlPCB/AstraControl.kicad_pcb"
          verbose: 3
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Report
          path: output
  Render_3D_Top:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Run Kibot
        uses: INTI-CMNB/KiBot@v2_dk8
        with:
          config: 3d_render_top.kibot.yaml
          dir: output
          schema: "AstraControlPCB/AstraControl.kicad_sch"
          board: "AstraControlPCB/AstraControl.kicad_pcb"
          verbose: 3
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Render_Top
          path: output
  Build_Jekyll:
    runs-on: ubuntu-latest
    needs: [Preflight, Render_3D_Top, Render_3D_Top_Angled]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: AstraControl
          path: output
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: output
      - name: Move artifact files
        run: |
          ls -l
          ls -l output
          ls -l output/Render_Top_Angled
          mv output/drc_validation.md ./
          mv output/erc_validation.md ./
          mv output/Render_Top/AstraControl-3D_blender_top.png images/AstraControl-3D_blender_top.png
          mv output/Render_Top_Angled/AstraControl-3D_blender_top.png images/AstraControl-3D_blender_top_angled.png
          ls -l
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  Deploy_Jekyll:
    needs: Build_Jekyll
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Documents:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

  #   permissions:
  #     contents: write

  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: "0"

  #     - name: Run Kibot
  #       run: |
  #         cd AstraControlPCB
  #         kibot -vvv -d ../output -c ../config.kibot.yaml -e AstraControl.kicad_sch -b AstraControl.kicad_pcb
  #         cd ..
  #         mkdir -p Report/Design
  #         mkdir -p Report/PCBPrint
  #         cp output/Report/AstraControl-report.txt Report/Design/Report.md
  #         cp output/PCBPrint/AstraControl-assembly.pdf Report/PCBPrint/AstraControl-assembly.pdf

  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: AstraControl-${{ steps.date.outputs.date }}
  #         path: output
  #     - name: Submit to Repository
  #       uses: stefanzweifel/git-auto-commit-action@v5
  #       with:
  #         commit_message: "[skip ci] Update repository with generated items"
  #         repository: .
  #         commit_user_name: GitHub Actions Bot
  # Render:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: "0"

  #     - name: Run Kibot
  #       run: |
  #         kibot -vvv -d output -c AstraControlPCB/3DRender.kibot.yaml -e AstraControl.kicad_sch -b AstraControlPCB/AstraControl.kicad_pcb

  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: AstraControl-3DRender-${{ steps.date.outputs.date }}
  #         path: output
